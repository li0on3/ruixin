// 瑞幸分销系统 - 高级动画系统
// ============================================

@import './design-tokens.scss';

// 页面转场动画
// ----------------------------------------

.page-transition-enter-active,
.page-transition-leave-active {
  transition: all var(--transition-base);
}

.page-transition-enter-from {
  opacity: 0;
  transform: translateY(1rem);
}

.page-transition-leave-to {
  opacity: 0;
  transform: translateY(-1rem);
}

// 路由切换动画
.router-fade-enter-active,
.router-fade-leave-active {
  transition: opacity var(--transition-base);
}

.router-fade-enter-from,
.router-fade-leave-to {
  opacity: 0;
}

// 滑动动画
.slide-up-enter-active,
.slide-up-leave-active {
  transition: all var(--transition-base);
}

.slide-up-enter-from,
.slide-up-leave-to {
  opacity: 0;
  transform: translateY(1rem);
}

.slide-down-enter-active,
.slide-down-leave-active {
  transition: all var(--transition-base);
}

.slide-down-enter-from,
.slide-down-leave-to {
  opacity: 0;
  transform: translateY(-1rem);
}

.slide-left-enter-active,
.slide-left-leave-active {
  transition: all var(--transition-base);
}

.slide-left-enter-from,
.slide-left-leave-to {
  opacity: 0;
  transform: translateX(1rem);
}

.slide-right-enter-active,
.slide-right-leave-active {
  transition: all var(--transition-base);
}

.slide-right-enter-from,
.slide-right-leave-to {
  opacity: 0;
  transform: translateX(-1rem);
}

// 缩放动画
.scale-enter-active,
.scale-leave-active {
  transition: all var(--transition-base);
}

.scale-enter-from,
.scale-leave-to {
  opacity: 0;
  transform: scale(0.9);
}

// 弹出动画
.bounce-enter-active {
  animation: bounceIn var(--transition-slow) ease-out;
}

.bounce-leave-active {
  animation: bounceOut var(--transition-base) ease-in;
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3) translateY(-50px);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes bounceOut {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(0.95);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0;
    transform: scale(0.3) translateY(-50px);
  }
}

// 列表动画
.list-enter-active,
.list-leave-active {
  transition: all var(--transition-base);
}

.list-enter-from,
.list-leave-to {
  opacity: 0;
  transform: translateX(30px);
}

.list-move {
  transition: transform var(--transition-base);
}

// 表格行动画
.table-row-enter-active {
  animation: tableRowSlideIn var(--transition-base) ease-out;
}

.table-row-leave-active {
  animation: tableRowSlideOut var(--transition-base) ease-in;
}

@keyframes tableRowSlideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
    background-color: var(--primary-50);
  }
  to {
    opacity: 1;
    transform: translateY(0);
    background-color: transparent;
  }
}

@keyframes tableRowSlideOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

// 卡片动画
.card-hover {
  transition: all var(--transition-base);
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }
}

.card-flip {
  perspective: 1000px;
  
  .card-flip-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform var(--transition-slow);
    transform-style: preserve-3d;
  }
  
  &:hover .card-flip-inner {
    transform: rotateY(180deg);
  }
  
  .card-flip-front,
  .card-flip-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: var(--radius-xl);
  }
  
  .card-flip-back {
    transform: rotateY(180deg);
  }
}

// 按钮动画
.btn-ripple {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width var(--transition-base), height var(--transition-base);
  }
  
  &:active::before {
    width: 300px;
    height: 300px;
  }
}

.btn-pulse {
  animation: pulse 2s infinite;
}

.btn-float {
  transition: transform var(--transition-base);
  
  &:hover {
    transform: translateY(-2px);
  }
  
  &:active {
    transform: translateY(0);
  }
}

// 加载动画
.loading-spinner {
  animation: spin 1s linear infinite;
}

.loading-dots {
  display: inline-flex;
  gap: var(--spacing-1);
  
  .dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: var(--primary-500);
    animation: loadingDots 1.4s infinite ease-in-out both;
    
    &:nth-child(1) {
      animation-delay: -0.32s;
    }
    
    &:nth-child(2) {
      animation-delay: -0.16s;
    }
  }
}

@keyframes loadingDots {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

.loading-wave {
  display: inline-flex;
  gap: var(--spacing-1);
  
  .bar {
    width: 4px;
    height: 20px;
    background-color: var(--primary-500);
    border-radius: var(--radius-full);
    animation: loadingWave 1.2s infinite ease-in-out;
    
    &:nth-child(1) { animation-delay: -1.2s; }
    &:nth-child(2) { animation-delay: -1.1s; }
    &:nth-child(3) { animation-delay: -1.0s; }
    &:nth-child(4) { animation-delay: -0.9s; }
    &:nth-child(5) { animation-delay: -0.8s; }
  }
}

@keyframes loadingWave {
  0%, 40%, 100% {
    transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
  }
}

// 骨架屏动画
.skeleton {
  background: linear-gradient(
    90deg,
    var(--gray-200) 25%,
    var(--gray-100) 50%,
    var(--gray-200) 75%
  );
  background-size: 200% 100%;
  animation: skeletonLoading 1.5s infinite;
}

@keyframes skeletonLoading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// 通知动画
.notification-enter-active {
  animation: notificationSlideIn var(--transition-base) ease-out;
}

.notification-leave-active {
  animation: notificationSlideOut var(--transition-base) ease-in;
}

@keyframes notificationSlideIn {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes notificationSlideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

// 模态框动画
.modal-enter-active {
  animation: modalSlideDown var(--transition-base) ease-out;
}

.modal-leave-active {
  animation: modalSlideUp var(--transition-base) ease-in;
}

@keyframes modalSlideDown {
  from {
    opacity: 0;
    transform: translateY(-50px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes modalSlideUp {
  from {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateY(-50px) scale(0.9);
  }
}

// 数字计数动画
.counter-animate {
  animation: counterPop var(--transition-base) ease-out;
}

@keyframes counterPop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

// 进度条动画
.progress-animate {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.3),
      transparent
    );
    animation: progressShimmer 2s infinite;
  }
}

@keyframes progressShimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

// 悬停效果
.hover-scale {
  transition: transform var(--transition-base);
  
  &:hover {
    transform: scale(1.05);
  }
}

.hover-rotate {
  transition: transform var(--transition-base);
  
  &:hover {
    transform: rotate(5deg);
  }
}

.hover-shadow {
  transition: box-shadow var(--transition-base);
  
  &:hover {
    box-shadow: var(--shadow-lg);
  }
}

.hover-lift {
  transition: all var(--transition-base);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }
}

// 文字动画
.text-gradient {
  background: linear-gradient(
    135deg,
    var(--primary-500),
    var(--primary-700)
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.text-shimmer {
  background: linear-gradient(
    90deg,
    var(--text-secondary),
    var(--primary-500),
    var(--text-secondary)
  );
  background-size: 200% auto;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: textShimmer 3s linear infinite;
}

@keyframes textShimmer {
  to {
    background-position: 200% center;
  }
}

// 状态指示器动画
.status-indicator {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    transform: translate(-50%, -50%);
    animation: statusPulse 2s infinite;
  }
  
  &.status-success::before {
    background-color: var(--success-500);
  }
  
  &.status-warning::before {
    background-color: var(--warning-500);
  }
  
  &.status-error::before {
    background-color: var(--error-500);
  }
}

@keyframes statusPulse {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1.5);
  }
}

// 响应式动画
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

// 动画实用类
.animate-none {
  animation: none;
}

.animate-fade-in {
  animation: fadeIn var(--transition-base) ease-out;
}

.animate-fade-in-up {
  animation: fadeInUp var(--transition-base) ease-out;
}

.animate-slide-in-right {
  animation: slideInRight var(--transition-base) ease-out;
}

.animate-slide-in-left {
  animation: slideInLeft var(--transition-base) ease-out;
}

.animate-bounce-in {
  animation: bounceIn var(--transition-slow) ease-out;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-ping {
  animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

// 延迟类
.delay-75 {
  animation-delay: 75ms;
}

.delay-100 {
  animation-delay: 100ms;
}

.delay-150 {
  animation-delay: 150ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-500 {
  animation-delay: 500ms;
}

// 持续时间类
.duration-75 {
  animation-duration: 75ms;
}

.duration-100 {
  animation-duration: 100ms;
}

.duration-150 {
  animation-duration: 150ms;
}

.duration-200 {
  animation-duration: 200ms;
}

.duration-300 {
  animation-duration: 300ms;
}

.duration-500 {
  animation-duration: 500ms;
}

.duration-700 {
  animation-duration: 700ms;
}

.duration-1000 {
  animation-duration: 1000ms;
}

// ============================================================================
// 微交互动画增强
// ============================================================================

// 磁性按钮效果
.btn-magnetic {
  position: relative;
  transition: all var(--transition-fast) cubic-bezier(0.68, -0.55, 0.265, 1.55);
  
  &:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow: 
      0 10px 25px rgba(0, 0, 0, 0.15),
      0 0 0 1px rgba(var(--primary-rgb), 0.1);
  }
  
  &:active {
    transform: translateY(-1px) scale(0.98);
    transition-duration: var(--transition-instant, 100ms);
  }
}

// 3D 翻转卡片
.card-3d-flip {
  perspective: 1000px;
  
  .card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform var(--transition-slow) cubic-bezier(0.175, 0.885, 0.32, 1.275);
    transform-style: preserve-3d;
  }
  
  &:hover .card-inner {
    transform: rotateY(180deg);
  }
  
  .card-front,
  .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: inherit;
  }
  
  .card-back {
    transform: rotateY(180deg);
  }
}

// 浮动呼吸效果
.float-breathing {
  animation: floatBreathing 4s ease-in-out infinite;
}

@keyframes floatBreathing {
  0%, 100% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
  25% {
    transform: translateY(-8px) scale(1.02);
    opacity: 0.9;
  }
  50% {
    transform: translateY(-12px) scale(1.05);
    opacity: 0.8;
  }
  75% {
    transform: translateY(-8px) scale(1.02);
    opacity: 0.9;
  }
}

// 发光脉冲
.glow-pulse {
  animation: glowPulse 2s ease-in-out infinite;
}

@keyframes glowPulse {
  0%, 100% {
    box-shadow: 
      0 0 5px rgba(var(--primary-rgb), 0.4),
      0 0 10px rgba(var(--primary-rgb), 0.2),
      0 0 15px rgba(var(--primary-rgb), 0.1);
  }
  50% {
    box-shadow: 
      0 0 10px rgba(var(--primary-rgb), 0.6),
      0 0 20px rgba(var(--primary-rgb), 0.4),
      0 0 30px rgba(var(--primary-rgb), 0.2);
  }
}

// 数据加载波浪
.data-loading-wave {
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(var(--primary-rgb), 0.1) 50%,
    transparent 100%
  );
  background-size: 200% 100%;
  animation: dataWave 1.5s ease-in-out infinite;
}

@keyframes dataWave {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

// 成功状态动画
.success-check {
  animation: successDraw 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}

@keyframes successDraw {
  0% {
    stroke-dasharray: 0 20;
    opacity: 0;
  }
  50% {
    stroke-dasharray: 10 20;
    opacity: 1;
  }
  100% {
    stroke-dasharray: 20 20;
    opacity: 1;
  }
}

// 表格行高亮
.table-row-highlight {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 0;
    background: linear-gradient(90deg, var(--primary-500), transparent);
    transition: width var(--transition-base) ease-out;
  }
  
  &:hover::before {
    width: 100%;
  }
}

// 输入框聚焦动画
.input-focus-enhance {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: var(--primary-500);
    transition: all var(--transition-base) cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateX(-50%);
  }
  
  &.is-focus::after {
    width: 100%;
  }
}

// 图标旋转效果
.icon-rotate-in {
  animation: iconRotateIn var(--transition-base) cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes iconRotateIn {
  0% {
    transform: rotate(-180deg) scale(0);
    opacity: 0;
  }
  50% {
    transform: rotate(-90deg) scale(1.1);
    opacity: 0.7;
  }
  100% {
    transform: rotate(0deg) scale(1);
    opacity: 1;
  }
}

// 标签弹出
.tag-bounce {
  animation: tagBounce 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes tagBounce {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  60% {
    transform: scale(1.1);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

// 搜索框动画
.search-expand {
  transition: all var(--transition-base) cubic-bezier(0.4, 0, 0.2, 1);
  
  &:focus {
    transform: scale(1.02);
    box-shadow: 
      0 0 0 3px rgba(var(--primary-rgb), 0.1),
      0 4px 12px rgba(0, 0, 0, 0.1);
  }
}

// 分页器动画
.pagination-slide {
  .el-pager li {
    transition: all var(--transition-fast) cubic-bezier(0.4, 0, 0.2, 1);
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    &.is-active {
      animation: pageActive 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }
  }
}

@keyframes pageActive {
  0% {
    transform: scale(0.8);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

// 侧边栏导航动画
.sidebar-nav-item {
  position: relative;
  transition: all var(--transition-fast) ease-out;
  
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    width: 0;
    height: 0;
    background: var(--primary-500);
    border-radius: 0 var(--radius-full) var(--radius-full) 0;
    transform: translateY(-50%);
    transition: all var(--transition-fast) cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  &:hover::before,
  &.active::before {
    width: 4px;
    height: 60%;
  }
  
  &:hover {
    background: var(--bg-hover);
    transform: translateX(4px);
  }
  
  &.active {
    background: var(--primary-50);
    color: var(--primary-600);
    transform: translateX(8px);
  }
}

// 通知消息滑入
.notification-slide {
  animation: notificationSlide 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes notificationSlide {
  0% {
    transform: translateX(100%) rotate(5deg);
    opacity: 0;
  }
  50% {
    transform: translateX(-5%) rotate(-2deg);
    opacity: 0.8;
  }
  100% {
    transform: translateX(0) rotate(0deg);
    opacity: 1;
  }
}

// 模态框弹出
.modal-bounce-in {
  animation: modalBounceIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes modalBounceIn {
  0% {
    transform: scale(0.3) translateY(-50px);
    opacity: 0;
  }
  50% {
    transform: scale(1.05) translateY(0);
    opacity: 0.8;
  }
  100% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }
}

// 工具提示动画
.tooltip-bounce {
  animation: tooltipBounce 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes tooltipBounce {
  0% {
    transform: scale(0) rotate(-12deg);
    opacity: 0;
  }
  70% {
    transform: scale(1.1) rotate(2deg);
    opacity: 0.9;
  }
  100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

// 图表数据点动画
.chart-point-enter {
  animation: chartPointEnter 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

@keyframes chartPointEnter {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  60% {
    transform: scale(1.2);
    opacity: 0.8;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

// 统计数字动画
.stat-number-pop {
  animation: statNumberPop 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes statNumberPop {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  70% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

// 面包屑动画
.breadcrumb-slide {
  .breadcrumb-item {
    animation: breadcrumbSlide 0.3s ease-out;
    animation-fill-mode: both;
    
    &:nth-child(1) { animation-delay: 0ms; }
    &:nth-child(2) { animation-delay: 50ms; }
    &:nth-child(3) { animation-delay: 100ms; }
    &:nth-child(4) { animation-delay: 150ms; }
    &:nth-child(5) { animation-delay: 200ms; }
  }
}

@keyframes breadcrumbSlide {
  0% {
    transform: translateX(-20px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

// 下拉菜单动画
.dropdown-cascade {
  .dropdown-item {
    animation: dropdownCascade 0.2s ease-out;
    animation-fill-mode: both;
    
    &:nth-child(1) { animation-delay: 0ms; }
    &:nth-child(2) { animation-delay: 30ms; }
    &:nth-child(3) { animation-delay: 60ms; }
    &:nth-child(4) { animation-delay: 90ms; }
    &:nth-child(5) { animation-delay: 120ms; }
  }
}

@keyframes dropdownCascade {
  0% {
    transform: translateY(-10px) scale(0.95);
    opacity: 0;
  }
  100% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
}

// 标签页切换
.tab-slide-enter-active,
.tab-slide-leave-active {
  transition: all var(--transition-base) cubic-bezier(0.4, 0, 0.2, 1);
}

.tab-slide-enter-from {
  transform: translateX(20px);
  opacity: 0;
}

.tab-slide-leave-to {
  transform: translateX(-20px);
  opacity: 0;
}

// 响应式动画控制
@media (max-width: 768px) {
  .mobile-reduce-animation {
    animation-duration: 0.2s !important;
    transition-duration: 0.2s !important;
  }
}

// 性能优化 - GPU 加速
.gpu-accelerated {
  transform: translate3d(0, 0, 0);
  will-change: transform;
}

// 暗色主题动画适配
[data-theme="dark"] {
  .glow-pulse {
    animation: glowPulseDark 2s ease-in-out infinite;
  }
  
  @keyframes glowPulseDark {
    0%, 100% {
      box-shadow: 
        0 0 5px rgba(var(--primary-rgb), 0.6),
        0 0 10px rgba(var(--primary-rgb), 0.4),
        0 0 15px rgba(var(--primary-rgb), 0.2);
    }
    50% {
      box-shadow: 
        0 0 10px rgba(var(--primary-rgb), 0.8),
        0 0 20px rgba(var(--primary-rgb), 0.6),
        0 0 30px rgba(var(--primary-rgb), 0.4);
    }
  }
}